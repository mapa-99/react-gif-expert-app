{"version":3,"sources":["Components/AddCategory.jsx","helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCat","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","cat","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAczC,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAKR,GAAO,SAACS,GAAD,OAAYP,GAAZ,mBAA0BO,OACjEN,EAAc,KAKd,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIHI,MAAMF,GAJH,cAIfG,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXhB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,0CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BACE,4BAAIA,UCHCO,EAAU,SAAC,GAAa,IAAXnB,EAAU,EAAVA,IAAU,ECFR,SAACA,GAAS,IAAD,EACTd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAHwB,mBAC5BC,EAD4B,KACrBC,EADqB,KAanC,OARAC,qBAAU,WACRxB,EAAQC,GAAKwB,MAAK,SAACC,GACjBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IACGqB,EDV2BK,CAAa1B,GAAjCa,EADoB,EAC1BN,KAAca,EADY,EACZA,QAItB,OAFAO,QAAQC,IAAIR,GAGV,qCACE,6BAAKpB,IACJoB,GACA,8CAED,qBAAKJ,UAAU,iBAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,aAA0BA,IAAKA,GAASA,GAAtBA,EAAIC,aEbnBkB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,YADd,mBACzB4C,EADyB,KACbC,EADa,KAMhC,OACE,qCACE,gDAEA,cAAC,EAAD,CAAa9C,OAAQ8C,IACrB,uBAECD,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAmBA,IAAKA,GAAVA,MAEhB,2B,MCdNgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04c81eef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCat }) => {\r\n  const [inputValue, SetInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    SetInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    inputValue.trim().length > 2 && setCat((cats) => [ inputValue,...cats]);\r\n    SetInputValue(\"\");\r\n\r\n    //console.log(\"Me la pela el submit\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCat: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (cat) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    cat\r\n  )}&limit=10&api_key=lvfan9hOYHrdz0XPtFAqz4btrBtzIZQZ`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__flipInX\">\r\n      <img src={url} alt={title} />\r\n      <p>\r\n        <b>{title}</b>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ cat }) => {\r\n  const { data: images, loading } = useFetchGifs(cat);\r\n\r\n  console.log(loading);\r\n\r\n  return (\r\n    <>\r\n      <h3>{cat}</h3>\r\n      {loading && (\r\n       <p>Carganding...</p>\r\n      )}\r\n      <div className=\"card-container\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} img={img} {...img} /> // manda todo el objeto para la desestructuraci√≥n\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (cat) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(cat).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [cat]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Digimon\"]);\r\n  // const handleAdd = () => {\r\n  //   //setCategories((cats) => [...cats, \"Pokemon\"]);\r\n  //   setCategories([...categories, \"Pokemon\"]);\r\n  // };\r\n  return (\r\n    <>\r\n      <h1>Gif-Expert-App</h1>\r\n\r\n      <AddCategory setCat={setCategories} />\r\n      <hr />\r\n\r\n      {categories.map((cat) => (\r\n        <GifGrid key={cat} cat={cat} />\r\n      ))}\r\n      <ol></ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}